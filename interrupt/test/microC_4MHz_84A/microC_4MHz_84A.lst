;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/22/2011 11:40:00 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28D5      	GOTO       213
_interrupt:
0x0004	0x00CF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x0095      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x0096      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0840      	MOVF       R0, 0
0x000C	0x008C      	MOVWF      12
;microC_4MHz_84A.c,8 :: 		void interrupt()
;microC_4MHz_84A.c,10 :: 		if (INTCON.T0IF) // Check for Timer 0 interrupt
0x000D	0x1D0B      	BTFSS      INTCON, 2
0x000E	0x2840      	GOTO       L_interrupt0
;microC_4MHz_84A.c,12 :: 		LoopCounter++;
0x000F	0x0A91      	INCF       _LoopCounter, 1
0x0010	0x1903      	BTFSC      STATUS, 2
0x0011	0x0A92      	INCF       _LoopCounter+1, 1
;microC_4MHz_84A.c,13 :: 		if(LoopCounter > 15) //Check for 15 cycles
0x0012	0x3080      	MOVLW      128
0x0013	0x00C0      	MOVWF      R0
0x0014	0x3080      	MOVLW      128
0x0015	0x0612      	XORWF      _LoopCounter+1, 0
0x0016	0x0240      	SUBWF      R0, 0
0x0017	0x1D03      	BTFSS      STATUS, 2
0x0018	0x281B      	GOTO       L__interrupt19
0x0019	0x0811      	MOVF       _LoopCounter, 0
0x001A	0x3C0F      	SUBLW      15
L__interrupt19:
0x001B	0x1803      	BTFSC      STATUS, 0
0x001C	0x283F      	GOTO       L_interrupt1
;microC_4MHz_84A.c,15 :: 		Digit1 = Digit1 +1; // Increase Digit 1
0x001D	0x0A8D      	INCF       _Digit1, 1
0x001E	0x1903      	BTFSC      STATUS, 2
0x001F	0x0A8E      	INCF       _Digit1+1, 1
;microC_4MHz_84A.c,16 :: 		if(Digit1>9) // if it is 9 then
0x0020	0x3080      	MOVLW      128
0x0021	0x00C0      	MOVWF      R0
0x0022	0x3080      	MOVLW      128
0x0023	0x060E      	XORWF      _Digit1+1, 0
0x0024	0x0240      	SUBWF      R0, 0
0x0025	0x1D03      	BTFSS      STATUS, 2
0x0026	0x2829      	GOTO       L__interrupt20
0x0027	0x080D      	MOVF       _Digit1, 0
0x0028	0x3C09      	SUBLW      9
L__interrupt20:
0x0029	0x1803      	BTFSC      STATUS, 0
0x002A	0x283D      	GOTO       L_interrupt2
;microC_4MHz_84A.c,18 :: 		Digit1=0; // reset to 0 and
0x002B	0x018D      	CLRF       _Digit1
0x002C	0x018E      	CLRF       _Digit1+1
;microC_4MHz_84A.c,19 :: 		Digit2++; // increase Digit 2
0x002D	0x0A8F      	INCF       _Digit2, 1
0x002E	0x1903      	BTFSC      STATUS, 2
0x002F	0x0A90      	INCF       _Digit2+1, 1
;microC_4MHz_84A.c,20 :: 		if(Digit2>9)// If Digit 2 is 9
0x0030	0x3080      	MOVLW      128
0x0031	0x00C0      	MOVWF      R0
0x0032	0x3080      	MOVLW      128
0x0033	0x0610      	XORWF      _Digit2+1, 0
0x0034	0x0240      	SUBWF      R0, 0
0x0035	0x1D03      	BTFSS      STATUS, 2
0x0036	0x2839      	GOTO       L__interrupt21
0x0037	0x080F      	MOVF       _Digit2, 0
0x0038	0x3C09      	SUBLW      9
L__interrupt21:
0x0039	0x1803      	BTFSC      STATUS, 0
0x003A	0x283D      	GOTO       L_interrupt3
;microC_4MHz_84A.c,21 :: 		Digit2=0;// then reset it to 0
0x003B	0x018F      	CLRF       _Digit2
0x003C	0x0190      	CLRF       _Digit2+1
L_interrupt3:
;microC_4MHz_84A.c,22 :: 		}
L_interrupt2:
;microC_4MHz_84A.c,23 :: 		LoopCounter =0; // Reset Loop Counter
0x003D	0x0191      	CLRF       _LoopCounter
0x003E	0x0192      	CLRF       _LoopCounter+1
;microC_4MHz_84A.c,24 :: 		}
L_interrupt1:
;microC_4MHz_84A.c,25 :: 		INTCON.T0IF = 0; // Clear Timer 0 overflow flag
0x003F	0x110B      	BCF        INTCON, 2
;microC_4MHz_84A.c,26 :: 		}
L_interrupt0:
;microC_4MHz_84A.c,27 :: 		}
L__interrupt18:
0x0040	0x080C      	MOVF       12, 0
0x0041	0x00C0      	MOVWF      R0
0x0042	0x0816      	MOVF       ___savePCLATH, 0
0x0043	0x008A      	MOVWF      PCLATH
0x0044	0x0E15      	SWAPF      ___saveSTATUS, 0
0x0045	0x0083      	MOVWF      STATUS
0x0046	0x0ECF      	SWAPF      R15, 1
0x0047	0x0E4F      	SWAPF      R15, 0
0x0048	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0049	0x1283      	BCF        STATUS, 5
0x004A	0x0814      	MOVF       ___DoICPAddr+1, 0
0x004B	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x004C	0x0813      	MOVF       ___DoICPAddr, 0
0x004D	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x004E	0x0008      	RETURN
; end of _____DoICP
_ssdecode:
;microC_4MHz_84A.c,56 :: 		void ssdecode(int i)
;microC_4MHz_84A.c,58 :: 		switch (i)
0x004F	0x2878      	GOTO       L_ssdecode6
;microC_4MHz_84A.c,60 :: 		case 0: PORTB = 0b00111111; break;
L_ssdecode8:
0x0050	0x303F      	MOVLW      63
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x0086      	MOVWF      PORTB
0x0053	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,61 :: 		case 1: PORTB = 0b00000110; break;
L_ssdecode9:
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x3006      	MOVLW      6
0x0056	0x0086      	MOVWF      PORTB
0x0057	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,62 :: 		case 2: PORTB = 0b01011011; break;
L_ssdecode10:
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x305B      	MOVLW      91
0x005A	0x0086      	MOVWF      PORTB
0x005B	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,63 :: 		case 3: PORTB = 0b01001111; break;
L_ssdecode11:
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x304F      	MOVLW      79
0x005E	0x0086      	MOVWF      PORTB
0x005F	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,64 :: 		case 4: PORTB = 0b01100110; break;
L_ssdecode12:
0x0060	0x1283      	BCF        STATUS, 5
0x0061	0x3066      	MOVLW      102
0x0062	0x0086      	MOVWF      PORTB
0x0063	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,65 :: 		case 5: PORTB = 0b01101101; break;
L_ssdecode13:
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x306D      	MOVLW      109
0x0066	0x0086      	MOVWF      PORTB
0x0067	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,66 :: 		case 6: PORTB = 0b01111101; break;
L_ssdecode14:
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x307D      	MOVLW      125
0x006A	0x0086      	MOVWF      PORTB
0x006B	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,67 :: 		case 7: PORTB = 0b00000111; break;
L_ssdecode15:
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x3007      	MOVLW      7
0x006E	0x0086      	MOVWF      PORTB
0x006F	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,68 :: 		case 8: PORTB = 0b01111111; break;
L_ssdecode16:
0x0070	0x1283      	BCF        STATUS, 5
0x0071	0x307F      	MOVLW      127
0x0072	0x0086      	MOVWF      PORTB
0x0073	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,69 :: 		case 9: PORTB = 0b01101111; break;
L_ssdecode17:
0x0074	0x1283      	BCF        STATUS, 5
0x0075	0x306F      	MOVLW      111
0x0076	0x0086      	MOVWF      PORTB
0x0077	0x28C8      	GOTO       L_ssdecode7
;microC_4MHz_84A.c,70 :: 		}
L_ssdecode6:
0x0078	0x3000      	MOVLW      0
0x0079	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x007A	0x1D03      	BTFSS      STATUS, 2
0x007B	0x287E      	GOTO       L__ssdecode22
0x007C	0x3000      	MOVLW      0
0x007D	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode22:
0x007E	0x1903      	BTFSC      STATUS, 2
0x007F	0x2850      	GOTO       L_ssdecode8
0x0080	0x3000      	MOVLW      0
0x0081	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x0082	0x1D03      	BTFSS      STATUS, 2
0x0083	0x2886      	GOTO       L__ssdecode23
0x0084	0x3001      	MOVLW      1
0x0085	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode23:
0x0086	0x1903      	BTFSC      STATUS, 2
0x0087	0x2854      	GOTO       L_ssdecode9
0x0088	0x3000      	MOVLW      0
0x0089	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x008A	0x1D03      	BTFSS      STATUS, 2
0x008B	0x288E      	GOTO       L__ssdecode24
0x008C	0x3002      	MOVLW      2
0x008D	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode24:
0x008E	0x1903      	BTFSC      STATUS, 2
0x008F	0x2858      	GOTO       L_ssdecode10
0x0090	0x3000      	MOVLW      0
0x0091	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x2896      	GOTO       L__ssdecode25
0x0094	0x3003      	MOVLW      3
0x0095	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode25:
0x0096	0x1903      	BTFSC      STATUS, 2
0x0097	0x285C      	GOTO       L_ssdecode11
0x0098	0x3000      	MOVLW      0
0x0099	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x009A	0x1D03      	BTFSS      STATUS, 2
0x009B	0x289E      	GOTO       L__ssdecode26
0x009C	0x3004      	MOVLW      4
0x009D	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode26:
0x009E	0x1903      	BTFSC      STATUS, 2
0x009F	0x2860      	GOTO       L_ssdecode12
0x00A0	0x3000      	MOVLW      0
0x00A1	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x00A2	0x1D03      	BTFSS      STATUS, 2
0x00A3	0x28A6      	GOTO       L__ssdecode27
0x00A4	0x3005      	MOVLW      5
0x00A5	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode27:
0x00A6	0x1903      	BTFSC      STATUS, 2
0x00A7	0x2864      	GOTO       L_ssdecode13
0x00A8	0x3000      	MOVLW      0
0x00A9	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x00AA	0x1D03      	BTFSS      STATUS, 2
0x00AB	0x28AE      	GOTO       L__ssdecode28
0x00AC	0x3006      	MOVLW      6
0x00AD	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode28:
0x00AE	0x1903      	BTFSC      STATUS, 2
0x00AF	0x2868      	GOTO       L_ssdecode14
0x00B0	0x3000      	MOVLW      0
0x00B1	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x00B2	0x1D03      	BTFSS      STATUS, 2
0x00B3	0x28B6      	GOTO       L__ssdecode29
0x00B4	0x3007      	MOVLW      7
0x00B5	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode29:
0x00B6	0x1903      	BTFSC      STATUS, 2
0x00B7	0x286C      	GOTO       L_ssdecode15
0x00B8	0x3000      	MOVLW      0
0x00B9	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x00BA	0x1D03      	BTFSS      STATUS, 2
0x00BB	0x28BE      	GOTO       L__ssdecode30
0x00BC	0x3008      	MOVLW      8
0x00BD	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode30:
0x00BE	0x1903      	BTFSC      STATUS, 2
0x00BF	0x2870      	GOTO       L_ssdecode16
0x00C0	0x3000      	MOVLW      0
0x00C1	0x0618      	XORWF      FARG_ssdecode_i+1, 0
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x28C6      	GOTO       L__ssdecode31
0x00C4	0x3009      	MOVLW      9
0x00C5	0x0617      	XORWF      FARG_ssdecode_i, 0
L__ssdecode31:
0x00C6	0x1903      	BTFSC      STATUS, 2
0x00C7	0x2874      	GOTO       L_ssdecode17
L_ssdecode7:
;microC_4MHz_84A.c,71 :: 		}
0x00C8	0x0008      	RETURN
; end of _ssdecode
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00C9	0x2049      	CALL       _____DoICP
0x00CA	0x118A      	BCF        PCLATH, 3
0x00CB	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00CC	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00CD	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00CE	0x0A93      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x00CF	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x00D0	0x0A94      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x00D1	0x03C0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x00D2	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x00D3	0x28C9      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x00D4	0x0008      	RETURN
; end of ___CC2DW
_main:
;microC_4MHz_84A.c,30 :: 		void main()
;microC_4MHz_84A.c,32 :: 		TRISA = 0b00011001; //RA0 input
0x00D5	0x3019      	MOVLW      25
0x00D6	0x1683      	BSF        STATUS, 5
0x00D7	0x0085      	MOVWF      TRISA
;microC_4MHz_84A.c,33 :: 		TRISB = 0; //PORTB output
0x00D8	0x0186      	CLRF       TRISB
;microC_4MHz_84A.c,34 :: 		OPTION_REG = 0b10000111; //Configure Timer 0
0x00D9	0x3087      	MOVLW      135
0x00DA	0x0081      	MOVWF      OPTION_REG
;microC_4MHz_84A.c,35 :: 		INTCON = 0b10100000; //Enable interrupts
0x00DB	0x30A0      	MOVLW      160
0x00DC	0x008B      	MOVWF      INTCON
;microC_4MHz_84A.c,36 :: 		Digit1 = 0; //Start from 0
0x00DD	0x018D      	CLRF       _Digit1
0x00DE	0x018E      	CLRF       _Digit1+1
;microC_4MHz_84A.c,37 :: 		Digit2 = 0; //Start from 0
0x00DF	0x018F      	CLRF       _Digit2
0x00E0	0x0190      	CLRF       _Digit2+1
;microC_4MHz_84A.c,38 :: 		LoopCounter = 0; //Start from 0
0x00E1	0x0191      	CLRF       _LoopCounter
0x00E2	0x0192      	CLRF       _LoopCounter+1
;microC_4MHz_84A.c,40 :: 		while (1) // loop forever
L_main4:
;microC_4MHz_84A.c,42 :: 		LoopCounter = 0; //Start from 0
0x00E3	0x0191      	CLRF       _LoopCounter
0x00E4	0x0192      	CLRF       _LoopCounter+1
;microC_4MHz_84A.c,43 :: 		ssdecode(Digit1); //Display digit 1
0x00E5	0x080D      	MOVF       _Digit1, 0
0x00E6	0x0097      	MOVWF      FARG_ssdecode_i
0x00E7	0x080E      	MOVF       _Digit1+1, 0
0x00E8	0x0098      	MOVWF      FARG_ssdecode_i+1
0x00E9	0x204F      	CALL       _ssdecode
;microC_4MHz_84A.c,44 :: 		PORTA.B1 = 1; //Enable Digit1
0x00EA	0x1485      	BSF        PORTA, 1
;microC_4MHz_84A.c,46 :: 		PORTA.B1 = 0; //Disable Digit1
0x00EB	0x1085      	BCF        PORTA, 1
;microC_4MHz_84A.c,47 :: 		ssdecode(Digit2); //Display digit 2
0x00EC	0x080F      	MOVF       _Digit2, 0
0x00ED	0x0097      	MOVWF      FARG_ssdecode_i
0x00EE	0x0810      	MOVF       _Digit2+1, 0
0x00EF	0x0098      	MOVWF      FARG_ssdecode_i+1
0x00F0	0x204F      	CALL       _ssdecode
;microC_4MHz_84A.c,48 :: 		PORTA.B2 = 1; //Enable Digit2
0x00F1	0x1505      	BSF        PORTA, 2
;microC_4MHz_84A.c,50 :: 		PORTA.B2 = 0; //Disable Digit2
0x00F2	0x1105      	BCF        PORTA, 2
;microC_4MHz_84A.c,51 :: 		LoopCounter++;//Cycle counter
0x00F3	0x0A91      	INCF       _LoopCounter, 1
0x00F4	0x1903      	BTFSC      STATUS, 2
0x00F5	0x0A92      	INCF       _LoopCounter+1, 1
;microC_4MHz_84A.c,52 :: 		}
0x00F6	0x28E3      	GOTO       L_main4
;microC_4MHz_84A.c,53 :: 		}
0x00F7	0x28F7      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [69]    _interrupt
0x0049       [6]    _____DoICP
0x004F     [122]    _ssdecode
0x00C9      [12]    ___CC2DW
0x00D5      [35]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    C_bit
0x0003       [0]    Z_bit
0x0003       [0]    RP1_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    RP0_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [0]    NOT_PD_bit
0x0003       [1]    STATUS
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0005       [0]    RA3_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB1_bit
0x0006       [1]    PORTB
0x0006       [0]    RB0_bit
0x0008       [1]    EEDATA
0x0009       [1]    EEADR
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    GIE_bit
0x000B       [0]    EEIE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    INTF_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    RBIE_bit
0x000D       [2]    _Digit1
0x000F       [2]    _Digit2
0x0011       [2]    _LoopCounter
0x0013       [2]    ___DoICPAddr
0x0015       [1]    ___saveSTATUS
0x0016       [1]    ___savePCLATH
0x0017       [2]    FARG_ssdecode_i
0x0040       [1]    R0
0x0041       [1]    R1
0x0042       [1]    R2
0x0043       [1]    R3
0x0044       [1]    R4
0x0045       [1]    R5
0x0046       [1]    R6
0x0047       [1]    R7
0x0048       [1]    R8
0x0049       [1]    R9
0x004A       [1]    R10
0x004B       [1]    R11
0x004C       [1]    R12
0x004D       [1]    R13
0x004E       [1]    R14
0x004F       [1]    R15
0x0081       [0]    T0CS_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS0_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0088       [0]    WRERR_bit
0x0088       [0]    EEIF_bit
0x0088       [1]    EECON1
0x0088       [0]    RD_bit
0x0088       [0]    WR_bit
0x0088       [0]    WREN_bit
0x0089       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_main4
  L_main5
  L_ssdecode6
  L_ssdecode7
  L_ssdecode8
  L_ssdecode9
  L_ssdecode10
  L_ssdecode11
  L_ssdecode12
  L_ssdecode13
  L_ssdecode14
  L_ssdecode15
  L_ssdecode16
  L_ssdecode17
  _interrupt
  L__interrupt18
  L__interrupt19
  L__interrupt20
  L__interrupt21
  _main
  _ssdecode
  L__ssdecode22
  L__ssdecode23
  L__ssdecode24
  L__ssdecode25
  L__ssdecode26
  L__ssdecode27
  L__ssdecode28
  L__ssdecode29
  L__ssdecode30
  L__ssdecode31
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_main4
  L_main5
  L_ssdecode6
  L_ssdecode7
  L_ssdecode8
  L_ssdecode9
  L_ssdecode10
  L_ssdecode11
  L_ssdecode12
  L_ssdecode13
  L_ssdecode14
  L_ssdecode15
  L_ssdecode16
  L_ssdecode17
  _interrupt
  L__interrupt18
  L__interrupt19
  L__interrupt20
  L__interrupt21
  _main
  _ssdecode
  L__ssdecode22
  L__ssdecode23
  L__ssdecode24
  L__ssdecode25
  L__ssdecode26
  L__ssdecode27
  L__ssdecode28
  L__ssdecode29
  L__ssdecode30
  L__ssdecode31
